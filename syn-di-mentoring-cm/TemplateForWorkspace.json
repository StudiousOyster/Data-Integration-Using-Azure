{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "syn-di-mentoring-cm"
		},
		"LS_OnPremSQLServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_OnPremSQLServer'"
		},
		"syn-di-mentoring-cm-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'syn-di-mentoring-cm-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:syn-di-mentoring-cm.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"LS_AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-di-mentoring-cm.vault.azure.net/"
		},
		"LS_OnPremSQLServer_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "YouFlixDB-ConnString"
		},
		"LS_OnPremSQLServer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "LAIDBACKOYSTER-\\chipp"
		},
		"LS_YouFlixWatermark_properties_typeProperties_sasUri_secretName": {
			"type": "string",
			"defaultValue": "YouFlixWatermark-SAS"
		},
		"LS_stdimentoringdatalakecm1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stdimentoringdatalakecm1.dfs.core.windows.net/"
		},
		"syn-di-mentoring-cm-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stdimentoringdatalakecm1.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/PL_OnPRem_ADLS')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Pipeline to incrementally copy data from on premises sql db tables to ADLS bronze layer.",
				"activities": [
					{
						"name": "PL Start Time",
						"description": "To set the variable with the start time of the pipeline to later update the watermark table",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pl_startTime",
							"value": {
								"value": "@formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ssZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Looping through the watermark columns",
						"description": "To loop through the tables and their respective watermark columns",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Watermark Column Map JSON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Watermark Column Map JSON').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CP_YouFlixDB_ADLSBronze",
									"description": "Copy data incrementally from on premises sql server DB, YouFlix, tables to ADLS bronze layer",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Azure Watermark Tbl Lookup",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat(\n    'SELECT * \n    FROM youflix.[',\n    item().tableName,\n    ']',\n    ' WHERE ',\n    item().watermarkColumn,\n    ' > ''',\n    formatDateTime(activity('Azure Watermark Tbl Lookup').output.firstRow.watermark, 'yyyy-MM-dd HH:mm:ss.fff'),\n    ''''\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_YouFLixDB",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "youflix",
												"tableName": {
													"value": "@item().tableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_bronze_youflix",
											"type": "DatasetReference",
											"parameters": {
												"folder_name": {
													"value": "youflix_@{item().tableName}",
													"type": "Expression"
												},
												"file_name": {
													"value": "@concat(\n    'youflix',\n    '_',\n    item().tableName,\n    '_',\n    formatDateTime(utcNow(), 'yyyyMMddhhmmss'),\n    '.csv'\n)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Azure Watermark Tbl Lookup",
									"description": "To lookup the contents of Azure watermark table.",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureTableSource",
											"azureTableSourceQuery": {
												"value": "@concat('PartitionKey eq ''', item().tableName, '''')",
												"type": "Expression"
											},
											"azureTableSourceIgnoreTableNotFound": false
										},
										"dataset": {
											"referenceName": "DS_YouFlixWatermark",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "Update watermark table",
									"description": "To update the azure table storage - watermark table.",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CP_YouFlixDB_ADLSBronze",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureTableSource",
											"additionalColumns": [
												{
													"name": "watermarkNew",
													"value": {
														"value": "@variables('pl_startTime')",
														"type": "Expression"
													}
												}
											],
											"azureTableSourceQuery": {
												"value": "@concat(\n    'PartitionKey eq '''\n    ,item().tableName,''''\n)",
												"type": "Expression"
											},
											"azureTableSourceIgnoreTableNotFound": false
										},
										"sink": {
											"type": "AzureTableSink",
											"azureTableInsertType": "merge",
											"azureTablePartitionKeyName": "PartitionKey",
											"azureTableRowKeyName": "RowKey",
											"writeBatchSize": 10000
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "PartitionKey",
														"type": "String"
													},
													"sink": {
														"name": "PartitionKey",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RowKey",
														"type": "String"
													},
													"sink": {
														"name": "RowKey",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Timestamp",
														"type": "DateTimeOffset"
													},
													"sink": {
														"name": "Timestamp",
														"type": "DateTimeOffset"
													}
												},
												{
													"source": {
														"name": "watermarkNew",
														"type": "String"
													},
													"sink": {
														"name": "watermark",
														"type": "DateTimeOffset"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_YouFlixWatermark",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_YouFlixWatermark",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Watermark Column Map JSON",
						"description": "JSON file consisting of watermark table mapping of youflix DB tables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PL Start Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_YouflixDB_WMColMap",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "To create Success file in adls",
						"description": "To create the Success.csv file in adls bronze > youflix",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Looping through the watermark columns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT 'Success!!'\nWHERE 1=1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_csvGeneration_Success",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_bronze_youflix",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": {
										"value": "@{string('')}",
										"type": "Expression"
									},
									"file_name": "Success.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"pl_startTime": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_YouflixDB_WMColMap')]",
				"[concat(variables('workspaceId'), '/datasets/DS_csvGeneration_Success')]",
				"[concat(variables('workspaceId'), '/datasets/DS_ADLS_bronze_youflix')]",
				"[concat(variables('workspaceId'), '/datasets/DS_YouFLixDB')]",
				"[concat(variables('workspaceId'), '/datasets/DS_YouFlixWatermark')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_ADLS_bronze_youflix')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "To connect to the ADLS > data > bronze > youflix  folders path",
				"linkedServiceName": {
					"referenceName": "LS_stdimentoringdatalakecm1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "bronze/youflix/@{dataset().folder_name}",
							"type": "Expression"
						},
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_stdimentoringdatalakecm1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_YouFLixDB')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Data set to connect to the different tables in YouFLixDB",
				"linkedServiceName": {
					"referenceName": "LS_OnPremSQLServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemaName": {
						"type": "string"
					},
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_OnPremSQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_YouFlixWatermark')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_YouFlixWatermark",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureTable",
				"schema": [],
				"typeProperties": {
					"tableName": "YouFlixWatermark"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_YouFlixWatermark')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_YouflixDB_WMColMap')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_stdimentoringdatalakecm1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "watermarkCollumMapFile.json",
						"fileSystem": "watermark"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_stdimentoringdatalakecm1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_csvGeneration_Success')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OnPremSQLServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "subscription_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "subscription_name",
						"type": "varchar"
					},
					{
						"name": "subscription_type",
						"type": "varchar"
					},
					{
						"name": "subscription_video_quality",
						"type": "varchar"
					},
					{
						"name": "subscription_max_devices",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_timestamp",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "expiration_timestamp",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "youflix",
					"table": "subscription"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_OnPremSQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_AzureKeyVault')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Linked service to azure key vault - kv-di-mentoring-cm",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_OnPremSQLServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Linked service to connect to on premise sql server to connect to Youflix DB. Connect using the secret version - 89779eb540704bad9ad1e1141ca28d0b",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_OnPremSQLServer_properties_typeProperties_connectionString_secretName')]",
						"secretVersion": "89779eb540704bad9ad1e1141ca28d0b"
					},
					"userName": "[parameters('LS_OnPremSQLServer_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_OnPremSQLServer_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/SelfHostedIR')]",
				"[concat(variables('workspaceId'), '/linkedServices/LS_AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_YouFlixWatermark')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Linked service to ADLS azure table YouFlixWatermark ",
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"sasUri": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_YouFlixWatermark_properties_typeProperties_sasUri_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/LS_AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_stdimentoringdatalakecm1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Linked service to connect to the ADLS, stdimentoringdatalakecm1.",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_stdimentoringdatalakecm1_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/syn-di-mentoring-cm-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('syn-di-mentoring-cm-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/syn-di-mentoring-cm-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('syn-di-mentoring-cm-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SelfHostedIR')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"description": "Self Hosted IR to connect to on premise SQL server and tables",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}